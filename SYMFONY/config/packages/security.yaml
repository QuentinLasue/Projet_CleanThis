security:
    # Configuration for password hashers and providers
    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        # users_in_memory: { memory: null }
        database_users:
            entity:
                class: App\Entity\User
                property: email
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
# Configuration for firewalls
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: database_users
            custom_authenticator:
                
                - App\Security\LoginFormAuthenticator
                # - App\Security\UserAuthenticator

            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route


            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                #always_remember_me: true
                # by default, the feature is enabled by checking a checkbox in the
                # login form, uncomment the following line to always enable it.
                #always_remember_me: true

        connect_google_check: 
            pattern: ^/connect/google_check
            security: false

    # Access control configuration
    access_control:
       - { path: ^/admin, roles: ROLE_EXPERT }
       - { path: ^/profile, roles: ROLE_SENIOR }
       - { path: ^/profile, roles: ROLE_JUNIOR }
       - {path: ^/user, roles: [ROLE_EXPERT, ROLE_SENIOR, ROLE_JUNIOR]}



when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon